module Test_RotatingFileHandler_mod
   use iso_fortran_env
   use ASTG_SeverityLevels_mod
   use ASTG_RotatingFileHandler_mod
   use ASTG_LogRecord_mod
   use pfunit_mod
   implicit none

@TestCase
   type, extends(TestCase) :: Test_RotatingFileHandler
      type (RotatingFileHandler) :: rotHandler0
      type (RotatingFileHandler) :: rotHandler1
   contains
      procedure :: setUp   
      procedure :: tearDown 
   end type Test_RotatingFileHandler

contains

   
   subroutine setUp(this)
      class (Test_RotatingFileHandler), intent(inout) :: this
      this%rotHandler0 = RotatingFileHandler('logFile0')
      this%rotHandler1  = RotatingFileHandler('logFile1',  &
           maxBytes='30', backupCount=2)
   end subroutine setUp

   
   subroutine tearDown(this)
      class (Test_RotatingFileHandler), intent(inout) :: this

      integer :: unit

      call this%rotHandler0%close()
      call this%rotHandler1%close()

      ! delete files
      open(newunit=unit, file='logfile1', status='old')
      close(unit, status='delete')
      open(newunit=unit, file='logfile0', status='old')
      close(unit, status='delete')

   end subroutine tearDown

   
@Test
   subroutine test_emitBasic(this)
      ! Make sure RotatingFileHandler defaults to FileHandler when
      ! maxBytes and backupCount are not specified
      class (Test_RotatingFileHandler), intent(inout) :: this   

      integer :: unit
      type (LogRecord) :: record
      character(len=32) :: foundMessage

      record = LogRecord('name', INFO, 'hello')
      call this%rotHandler0%handle(record)
      
      unit = this%rotHandler0%getUnit()
      rewind(unit)
      read(unit, '(a)') foundMessage

      @assertEqual('INFO: '//record%getMessage(), foundMessage)

   end subroutine test_emitBasic

   
@Test
   subroutine test_shouldRollover(this)
      ! The RFH should signal that it's time to rollover when 'maxBytes'
      ! has been exceeded
      class (Test_RotatingFileHandler), intent(inout) :: this   

      integer :: unit
      type (LogRecord) :: record
      
      record = LogRecord('name', INFO, 'hello') ! 'INFO: hello' = 12 bytes
      ! Since maxBytes=30, rotHandler should rollOver after 3 records = 36 bytes
      call this%rotHandler1%handle(record)
      ! Not ready yet
      @assertFalse(this%rotHandler1%shouldRollover())
      call this%rotHandler1%handle(record)
      call this%rotHandler1%handle(record)
      ! Ready
      @assertTrue(this%rotHandler1%shouldRollover())

   end subroutine test_shouldRollover

   
@Test
subroutine test_doRollover(this)
      ! The RFH should roll over every time 'maxBytes' is exceeded and should
      ! create a maximum of 'backupCount' files
      class (Test_RotatingFileHandler), intent(inout) :: this   

      integer :: unit
      type (LogRecord) :: record
      integer :: i
      logical :: created
      integer :: fSize
      
      record = LogRecord('name', INFO, 'hello') ! 'INFO: hello' = 12 bytes
      do i=1,8 ! Force at least two files (backupCount=2) to be created
         call this%rotHandler1%handle(record)
      end do      

      inquire(FILE='logFile1.1', SIZE=fSize)
      @assertEqual(36, fSize)
      inquire(FILE='logFile1.2', SIZE=fSize)
      @assertEqual(36, fSize)
      
   end subroutine test_doRollover

      
end module Test_RotatingFileHandler_mod

