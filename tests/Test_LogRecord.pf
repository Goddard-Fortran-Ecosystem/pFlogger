module Test_LogRecord_mod
   use pFUnit_mod
   use ASTG_SeverityLevels_mod
   use ASTG_LogRecord_mod
   use iso_fortran_env
   
   implicit none

   public :: Test_LogRecord
   
@TestCase
   type, extends(TestCase) :: Test_LogRecord
      type (LogRecord) :: record
   contains
      procedure :: setUp   
      procedure :: tearDown 
   end type Test_LogRecord

contains

   
   subroutine setUp(this)
      class (Test_LogRecord), intent(inout) :: this

      
   end subroutine setUp

   
   subroutine tearDown(this)
      class (Test_LogRecord), intent(inout) :: this

   end subroutine tearDown


@Test
   subroutine test_intRecord(this)
      class (Test_LogRecord), intent(inout) :: this
      
      this%record = LogRecord('A', INFO, 'Hello')
      @assertEqual('A', this%record%getName())
      @assertEqual(INFO, this%record%getLevel())
      @assertEqual('Hello', this%record%getMessage())
      
   end subroutine test_intRecord

@Test
   subroutine test_args(this)
      use ASTG_UnlimitedVector_mod, only: UnlimitedVector => Vector
      class (Test_LogRecord), intent(inout) :: this
      type (UnlimitedVector) :: args
      
      this%record = LogRecord('A', INFO, 'Hello')
      @assertEqual('A', this%record%getName())
      @assertEqual(INFO, this%record%getLevel())
      @assertEqual('Hello', this%record%getMessage())
      
   end subroutine test_args

end module Test_LogRecord_mod
