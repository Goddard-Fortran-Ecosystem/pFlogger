module Test_MpiFilter_mod
   use pFUnit_mod
   use ASTG_MpiFilter_mod
   use ASTG_LogRecord_mod
   use ASTG_SeverityLevels_mod, only: INFO

   implicit none
   
contains

   @test
   subroutine Test_MpiFilter_defaultRank()
      use MockMpi_mod
      integer :: comm
      type (MpiFilter) :: f
      type (LogRecord) :: record
      integer :: rank, ier
      
      comm = 12345
      call setMpiRank(0)
      f = MpiFilter(comm)
      record = LogRecord('A', INFO, 'some message')
      @assertTrue(f%dofilter(record))
      
      call setMpiRank(1)
      f = MpiFilter(comm)
      @assertFalse(f%dofilter(record))
      
   end subroutine Test_MpiFilter_defaultRank

   @test
   subroutine Test_MpiFilter_withRank
      use MockMpi_mod
      integer :: comm
      type (MpiFilter) :: f
      type (LogRecord) :: record
      
      record = LogRecord('A', INFO, 'some message')

      call setMpiRank(0)
      
      f = MpiFilter(comm, rank=1)
      @assertFalse(f%dofilter(record))
      
      call setMpiRank(1)
      
      f = MpiFilter(comm, rank=1)
      @assertTrue(f%dofilter(record))
      
   end subroutine Test_MpiFilter_withRank


end module Test_MpiFilter_mod
