module Test_newFormatParser_mod
   use pFUnit_mod
   use ASTG_NewFormatParser_mod
   use ASTG_FormatToken_mod
   implicit none



contains










@test
   subroutine test_terminateKeywordFormat()
      type (FormatParser) :: parser
      type (FormatToken) :: token
      procedure (HandlerInterface), pointer :: procPtr
      character(len=:), pointer :: buffer
      type (FormatToken), pointer :: t

      parser = FormatParser()
      call parser%parse('rank is %{rank,i3}')

      call parser%getHandler(procPtr)
      @assertTrue(associated(procPtr, textHandler), 'context changes back to text')

      call parser%getBuffer(buffer)
      @assertEqual('', buffer, 'space should be retained')
      @assertEqual(2, parser%size())

      t => parser%at(1)
      @assertEqual(TEXT, t%type)
      @assertEqual('rank is ', t%textString)

      t => parser%at(2)
      @assertEqual(KEYWORD, t%type)
      @assertEqual('i3', t%formatSpecifier)
      @assertEqual('rank', t%keywordString)

   end subroutine test_terminateKeywordFormat



@test
   subroutine test_endOfString_pos()
      use iso_c_binding, only: C_NULL_CHAR
      type (FormatParser) :: parser
      type (FormatToken) :: token
      procedure (HandlerInterface), pointer :: procPtr
      character(len=:), pointer :: buffer
      type (FormatToken), pointer :: t

      parser = FormatParser()
      call parser%parse('%f10.3')
      call parser%parseCharacter(C_NULL_CHAR)

      @assertEqual(1, parser%size())
      t => parser%at(1)
      @assertEqual(POSITION, t%type)
      @assertEqual('f10.3', t%formatSpecifier)
      
   end subroutine test_endOfString_pos


! Keyword format specifiers must be terminated
@test
   subroutine test_endOfString_keyword()
      use iso_c_binding, only: C_NULL_CHAR
      type (FormatParser) :: parser
      type (FormatToken) :: token
      procedure (HandlerInterface), pointer :: procPtr
      character(len=:), pointer :: buffer
      type (FormatToken), pointer :: t

      parser = FormatParser()
      call parser%parse('%{rank,i3') ! unterminated
      call parser%parseCharacter(C_NULL_CHAR)

      @assertExceptionRaised('FormatParser::keywordFormatHandler() - incomplete keyword format specifier.')
      @assertEqual(0, parser%size())
      
   end subroutine test_endOfString_keyword


end module Test_newFormatParser_mod
